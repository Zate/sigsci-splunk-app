import sigsci_ta_for_splunk_declare

import os
import sys
import time
import datetime

import modinput_wrapper.base_modinput
from splunklib import modularinput as smi



import input_module_SigsciRequests as input_module


'''
    Do not edit this file!!!
    This file is generated by Add-on builder automatically.
    Add your modular input logic to file SigsciRequests.py
'''
class ModInputSigsciRequests(modinput_wrapper.base_modinput.SingleInstanceModInput):

    def __init__(self):
        super(ModInputSigsciRequests, self).__init__("sigsci_ta_for_splunk", "SigsciRequests")

    def get_scheme(self):
        """overloaded splunklib modularinput method"""
        scheme = smi.Scheme("SigsciRequests")
        scheme.title = ("SigSci Request Data")
        scheme.description = ("")
        scheme.use_external_validation = True
        scheme.streaming_mode_xml = True
        scheme.use_single_instance = False

        scheme.add_argument(smi.Argument("name", title="Name",
                                         description="",
                                         required_on_create=True))
        scheme.add_argument(smi.Argument("delta", title="Time Delta",
                                         description="Time delta in Minutes",
                                         required_on_create=True,
                                         required_on_edit=True))
	scheme.add_argument(smi.Argument("site", title="Dashboard Site",
                                         description="Name of the SigSci Dashboard Site",
                                         required_on_create=True,
                                         required_on_edit=True))
        return scheme

    def get_app_name(self):
        return "sigsci_TA_for_splunk"

    def validate_input(self, definition):
        """validate the input stanza"""
        input_module.validate_input(self, definition)

    def collect_events(self, inputs, ew):
        """write out the events"""
        input_module.collect_events(self, inputs, ew)

if __name__ == "__main__":
    exitcode = ModInputSigsciRequests().run(sys.argv)
    sys.exit(exitcode)
